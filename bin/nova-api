#!/usr/bin/env python
# pylint: disable-msg=C0103
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2010 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

"""Starter script for Nova API."""

import gettext
import os
import sys

from paste import deploy

# If ../nova/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'nova', '__init__.py')):
    sys.path.insert(0, possible_topdir)

gettext.install('nova', unicode=1)

from nova import flags
from nova import log as logging
from nova import wsgi

logging.basicConfig()
LOG = logging.getLogger('nova.api')

FLAGS = flags.FLAGS

API_ENDPOINTS = ['ec2', 'osapi']


def load_configuration(paste_config, name):
    """Load the paste configuration from the config file and return it."""
    config = None
    try:
        config = deploy.appconfig("config:%s" % paste_config, name=name)
        return config
    except LookupError:
        return None


def run_app(paste_config_file):
    LOG.debug(_("Using paste.deploy config at: %s"), configfile)
    server = wsgi.Server()
    apps = []
    for api in API_ENDPOINTS:
        config = load_configuration(paste_config_file, api)
        if config is None:
            continue
        if int(config.get('verbose', 0)) == 1:
            FLAGS.verbose = True
        host = config.get("%s_host" % api, config.get('host', '0.0.0.0'))
        port = config.get("%s_port" % api, getattr(FLAGS, "%s_port" % api))
        setattr(FLAGS, "%s_host" % api, host)
        setattr(FLAGS, "%s_port" % api, port)
        LOG.info(_("Running %s API"), api)
        app = deploy.loadapp('config:%s' % paste_config_file, name=api)
        apps.append((app, int(port), host))
    if len(apps) == 0:
        LOG.error(_("No known API applications configured in %s."),
                  paste_config_file)
    else:
        for app in apps:
            server.start(*app)
        server.wait()


if __name__ == '__main__':
    FLAGS(sys.argv)
    configfiles = ['/etc/nova/nova-api.conf']
    if os.path.exists(os.path.join(possible_topdir, 'nova', '__init__.py')):
        configfiles.insert(0,
                       os.path.join(possible_topdir, 'etc', 'nova-api.conf'))
    for configfile in configfiles:
        if os.path.exists(configfile):
            run_app(configfile)
            break
        else:
            LOG.debug(_("Skipping missing configuration: %s"), configfile)
