#!/usr/bin/env python
# pylint: disable-msg=C0103
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2010 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

"""Starter script for Nova Direct API."""

import gettext
import os
import sys

# If ../nova/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'nova', '__init__.py')):
    sys.path.insert(0, possible_topdir)

gettext.install('nova', unicode=1)

from nova import flags
from nova import log as logging
from nova import utils
from nova import wsgi
from nova.api import direct
from nova.compute import api as compute_api


FLAGS = flags.FLAGS
flags.DEFINE_integer('direct_port', 8001, 'Direct API port')
flags.DEFINE_string('direct_host', '0.0.0.0', 'Direct API host')

if __name__ == '__main__':
    utils.default_flagfile()
    FLAGS(sys.argv)
    logging.setup()

    direct.register_service('compute', compute_api.API())
    direct.register_service('reflect', direct.Reflection())
    router = direct.Router()
    with_json = direct.JsonParamsMiddleware(router)
    with_req = direct.PostParamsMiddleware(with_json)
    with_auth = direct.DelegatedAuthMiddleware(with_req)

    server = wsgi.Server()
    server.start(with_auth, FLAGS.direct_port, host=FLAGS.direct_host)
    server.wait()
