#!/usr/bin/env python
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright 2010 United States Government as represented by the
# Administrator of the National Aeronautics and Space Administration.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.

"""
  Daemon for Nova RRD based instance resource monitoring.
"""

import os
import logging
import sys
from twisted.application import service

# If ../nova/__init__.py exists, add ../ to Python search path, so that
# it will override what happens to be installed in /usr/(local/)lib/python...
possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, 'nova', '__init__.py')):
    sys.path.insert(0, possible_topdir)

from nova import utils
from nova import twistd
from nova.compute import monitor

logging.getLogger('boto').setLevel(logging.WARN)


if __name__ == '__main__':
    twistd.serve(__file__)

if __name__ == '__builtin__':
    utils.default_flagfile()
    logging.warn('Starting instance monitor')
    # pylint: disable-msg=C0103
    monitor = monitor.InstanceMonitor()

    # This is the parent service that twistd will be looking for when it
    # parses this file, return it so that we can get it into globals below
    application = service.Application('nova-instancemonitor')
    monitor.setServiceParent(application)
