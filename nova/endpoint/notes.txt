bin/nova-api:
  somehow listens for 'cloud_topic' rpc messages and ties them to
    the cloud controller (maybe so internal calls can hit the API
    via Queuing instead of via HTTP?)
  hands CloudController and AdminController to APIServerApplication
  and hands that to Tornado.

  
api.py:

APIServerApplication(tornado.web.Application)
  maps routes to APIRequestHandler, CloudPipRequestHandler, MetadataRequestHandler,
                 RootRequestHandler(just lists versions)
  (and to controllers which are passed to __init__)
  magical twisted mapping to it

APIRequestHandler
  execute:
    authenticates request
    picks controller from APIServerApplication's list based on name that was at the
     start of the URL (e.g. /services/Cloud has /services mapped here via 
     APIServerApplication then Cloud is controller_name)
    picks action from incoming request arguments
    dict = APIRequest(controller, action).send(Context(user, project))
    _write_callback(dict)
    self.finish()

APIRequest
  send(context, **kwargs):
    dict = controller.action(context, **kwargs)
    return _render_response(dict) # turns into XML


CloudController and AdminController:
  actions return dict (or True which is converted into dict(return=True))
  actions have @rbac.allow('list', 'of', 'roles', 'or', '"all"')
  actions can have @defer.inlineCallbacks which is used for yield statements
  can use rpc.cast and then defer a returnValue


==== STRATEGY TO CONVERT TO EVENTLET+WSGI ====

* Controllers:
  move the @rbac.allow data into an auth WSGI that is right above the call
    to the controller
x  verify @defer.inlineCallbacks is just to allow the yield statements, then
x    remove the yield statements (untangle from twisted)
  
* nova-api:
  verify that cloud_topic is going away which I seem to remember, so we can ignore rpc

* apiserverapplication:
x  replace with a Router to a wsgi.Controller
x    apirequesthandler stuff is just an entry in api.APIRouter

* apirequesthandler
x  wsgi.Controller pointed to by api.APIRouter
x    - basically it's execute() from old APIRequestHandler
x  change to return data directly instead of _write_callback() and finish()

* apirequest
x  doesn't need to change
